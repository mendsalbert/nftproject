{"version":3,"file":"static/chunks/pages/create-f7d6af00f3b20e95.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./pages/create/index.jsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/create\",\n      function () {\n        return require(\"private-next-pages/create/index.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/create\"])\n      });\n    }\n  ","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"tippy.js/dist/tippy.css\"; // optional\r\nimport { ethers } from \"ethers\";\r\nimport { Badge, Button, Input, Modal, Textarea } from \"@nextui-org/react\";\r\nimport { Collapse, Grid, Text, Progress } from \"@nextui-org/react\";\r\n// import FileViewer from \"react-file-viewer\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport Meta from \"../../components/Meta\";\r\nimport { AuthContext } from \"../../utils/AuthProvider\";\r\n\r\nconst Create = () => {\r\n  const { address, signer, contract, provider, chainId, connect } =\r\n    useContext(AuthContext);\r\n\r\n  console.log(\"signer\", signer);\r\n  const projectId = \"2DB3mQQJtzIC03GYarET8tFZJIm\";\r\n  const projectSecret = \"0dedd8064ff788414096e72cc7e3f4a1\";\r\n  const auth =\r\n    \"Basic \" + Buffer.from(projectId + \":\" + projectSecret).toString(\"base64\");\r\n  const ipfsClient = require(\"ipfs-http-client\");\r\n  console.log(auth);\r\n  const ipfs = ipfsClient.create({\r\n    host: \"ipfs.infura.io\",\r\n    port: 5001,\r\n    protocol: \"https\",\r\n    apiPath: \"/api/v0\",\r\n    headers: {\r\n      authorization: auth,\r\n    },\r\n  });\r\n\r\n  const [isloading, setisloading] = useState(false);\r\n  const [file, setFile] = useState(\"\");\r\n  const [filetype, setfiletype] = useState(\"\");\r\n  const [filesize, setfilesize] = useState(\"\");\r\n  const [isfileuploading, setisfileuploading] = useState(false);\r\n  const [fileready, setfileready] = useState(false);\r\n  const [isnftready, setisnftready] = useState(false);\r\n\r\n  const [name, setname] = useState(\"\");\r\n  const [assetprice, setassetprice] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const onError = (err) => {\r\n    console.log(\"Error:\", err); // Write your own logic\r\n  };\r\n\r\n  async function onChange(e) {\r\n    setisloading(true);\r\n    const file = e.target.files[0];\r\n\r\n    try {\r\n      const added = await ipfs.add(file, {\r\n        progress: (prog) => console.log(`received: ${prog}`),\r\n      });\r\n\r\n      const url = `https://infura-ipfs.io/ipfs/${added.path}`;\r\n      console.log(url);\r\n      setFile(url);\r\n      setisloading(false);\r\n      setfiletype(file.name);\r\n      setfilesize(file.size);\r\n      // setFileUrl(url);\r\n    } catch (error) {\r\n      console.log(\"Error uploading file: \", error);\r\n    }\r\n  }\r\n\r\n  function getExtension() {\r\n    return filetype.split(\".\").pop();\r\n  }\r\n\r\n  const notify = (msg) =>\r\n    toast.success(msg, {\r\n      style: {\r\n        borderRadius: \"10px\",\r\n        background: \"#333\",\r\n        color: \"#fff\",\r\n      },\r\n    });\r\n\r\n  const onAddNFT = async () => {\r\n    setisloading(true);\r\n\r\n    console.log(description);\r\n    console.log(name);\r\n    console.log(assetprice);\r\n\r\n    if (description == \"\" || name == \"\" || assetprice == \"\") {\r\n      alert(\"all fields required\");\r\n      return;\r\n    }\r\n    const price = ethers.utils.parseUnits(assetprice?.toString(), \"ether\");\r\n\r\n    let listingPrice = await signer?.getListingPrice();\r\n    listingPrice = listingPrice?.toString();\r\n    // console.log(listingPrice, price.toString());\r\n    let transaction = await signer?.createToken(\r\n      file,\r\n      price,\r\n      name,\r\n      description,\r\n      file,\r\n      {\r\n        value: listingPrice,\r\n      }\r\n    );\r\n    await transaction?.wait();\r\n    setisloading(false);\r\n    setisnftready(true);\r\n    setdescription(\"\");\r\n    setassetprice(\"\");\r\n    setname(\"\");\r\n    setFile(\"\");\r\n    notify(\"NFT Created Successfully\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    connect();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Meta title=\"Create || Xhibiter | NFT Marketplace Next.js Template\" />\r\n      {/* <!-- Create --> */}\r\n      <section className=\"relative py-24\">\r\n        <picture className=\"pointer-events-none absolute inset-0 -z-10 dark:hidden\">\r\n          <img\r\n            src=\"/images/gradient_light.jpg\"\r\n            alt=\"gradient\"\r\n            className=\"h-full w-full\"\r\n          />\r\n        </picture>\r\n        <div className=\"container\">\r\n          <h1 className=\"font-display text-jacarta-700 py-16 text-center text-4xl font-medium dark:text-white\">\r\n            Create\r\n          </h1>\r\n\r\n          <button\r\n            onClick={() => {\r\n              connect();\r\n            }}\r\n          >\r\n            connect\r\n          </button>\r\n          <div className=\"mx-auto max-w-[48.125rem]\">\r\n            {/* <!-- File Upload --> */}\r\n            <div className=\"mb-6\"></div>\r\n            {/* <!-- Name --> */}\r\n            <div className=\"mb-6\">\r\n              <label\r\n                htmlFor=\"item-name\"\r\n                className=\"font-display text-jacarta-700 mb-2 block dark:text-white\"\r\n              >\r\n                Name<span className=\"text-red\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setname(e.target.value);\r\n                }}\r\n                id=\"item-name\"\r\n                className=\"dark:bg-jacarta-700 border-jacarta-100 hover:ring-accent/10 focus:ring-accent dark:border-jacarta-600 dark:placeholder:text-jacarta-300 w-full rounded-lg py-3 px-3 hover:ring-2 dark:text-white\"\r\n                placeholder=\"Item name\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-6\">\r\n              <label\r\n                htmlFor=\"item-name\"\r\n                className=\"font-display text-jacarta-700 mb-2 block dark:text-white\"\r\n              >\r\n                Price<span className=\"text-red\">*</span>\r\n              </label>\r\n              <input\r\n                value={assetprice}\r\n                onChange={(e) => {\r\n                  setassetprice(e.target.value);\r\n                }}\r\n                type=\"number\"\r\n                id=\"item-name\"\r\n                className=\"dark:bg-jacarta-700 border-jacarta-100 hover:ring-accent/10 focus:ring-accent dark:border-jacarta-600 dark:placeholder:text-jacarta-300 w-full rounded-lg py-3 px-3 hover:ring-2 dark:text-white\"\r\n                placeholder=\"Item name\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* <!-- Description --> */}\r\n            <div className=\"mb-6\">\r\n              <label\r\n                htmlFor=\"item-description\"\r\n                className=\"font-display text-jacarta-700 mb-2 block dark:text-white\"\r\n              >\r\n                Description\r\n              </label>\r\n              <p className=\"dark:text-jacarta-300 text-2xs mb-3\">\r\n                The description will be included on the {\"item's\"} detail page\r\n                underneath its image. Markdown syntax is supported.\r\n              </p>\r\n              <textarea\r\n                value={description}\r\n                onChange={(e) => {\r\n                  setdescription(e.target.value);\r\n                }}\r\n                id=\"item-description\"\r\n                className=\"dark:bg-jacarta-700 border-jacarta-100 hover:ring-accent/10 focus:ring-accent dark:border-jacarta-600 dark:placeholder:text-jacarta-300 w-full rounded-lg py-3 px-3 hover:ring-2 dark:text-white\"\r\n                rows=\"4\"\r\n                required\r\n                placeholder=\"Provide a detailed description of your item.\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div class=\"max-w-full mb-6\">\r\n              <label class=\"flex justify-center w-full h-32 px-4 transition bg-white dark:bg-[#13173f] border-2 border-gray-300 border-dashed rounded-md appearance-none cursor-pointer hover:border-gray-400 focus:outline-none\">\r\n                <span class=\"flex items-center space-x-2\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    class=\"w-6 h-6 text-gray-600\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"2\"\r\n                  >\r\n                    <path\r\n                      stroke-linecap=\"round\"\r\n                      stroke-linejoin=\"round\"\r\n                      d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\r\n                    />\r\n                  </svg>\r\n                  <span class=\"font-medium text-gray-600\">\r\n                    Click here to select file\r\n                    {/* <span class=\"text-blue-600 underline\">browse</span> */}\r\n                  </span>\r\n                </span>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file_upload\"\r\n                  class=\"hidden\"\r\n                  onChange={onChange}\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            {/* {file && (\r\n              <FileViewer\r\n                fileType={getExtension()}\r\n                filePath={file}\r\n                // errorComponent={CustomErrorComponent}\r\n                onError={onError}\r\n              />\r\n            )} */}\r\n\r\n            {isloading ? (\r\n              <div className=\"flex flex-row items-center justify-center\">\r\n                <Progress\r\n                  indeterminated\r\n                  value={50}\r\n                  color=\"secondary\"\r\n                  status=\"secondary\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {file && (\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    onAddNFT();\r\n                  }}\r\n                  className=\"bg-accent-lighter cursor-pointer rounded-full py-3 px-8 text-center font-semibold text-white transition-all\"\r\n                >\r\n                  Upload\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isfileuploading ? (\r\n              <Progress\r\n                indeterminated\r\n                value={50}\r\n                color=\"primary\"\r\n                status=\"primary\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {/* <!-- Submit --> */}\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/* <!-- end create --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n"],"names":["window","__NEXT_P","push","useContext","AuthContext","signer","address","connect","contract","provider","chainId","console","log","auth","Buffer","from","projectId","toString","ipfsClient","require","ipfs","create","host","port","protocol","apiPath","headers","authorization","useState","onChange","e","file","added","url","setisloading","target","files","add","progress","prog","path","setFile","setfiletype","name","setfilesize","size","onAddNFT","price","listingPrice","transaction","description","assetprice","alert","ethers","getListingPrice","createToken","value","wait","setisnftready","setdescription","setassetprice","setname","msg","toast","style","borderRadius","background","color","useEffect","div","Meta","title","section","className","picture","img","src","alt","h1","button","onClick","label","htmlFor","span","input","type","id","placeholder","required","p","textarea","rows","class","svg","xmlns","fill","viewBox","stroke","stroke-width","stroke-linecap","stroke-linejoin","d","isloading","Progress","indeterminated","status","isfileuploading"],"sourceRoot":""}