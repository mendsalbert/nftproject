{"version":3,"file":"static/chunks/3fff1979-9045beb9f9934748.js","mappings":"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","sources":["webpack://_N_E/./node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","d","animationOptions","Object","keys","_fallback","_indexable","_scriptable","name","colors","properties","numbers","animation","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","l","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","rotation","_getCircumference","circumference","_getRotationExtents","T","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","call","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","startsWith","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","sqrt","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","caches","widths","heights","j","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","w","h","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","tickTextAlign","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","_layers","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","ScatterController","interaction","__proto__","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","el","getRange","lo","hi","evaluateInteractionItems","handler","getIntersectItems","includeInvisible","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","outerStartX","outerStartY","outerEndX","outerEndY","borderJoinStyle","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","version","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","defineProperty","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","configurable","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}